{"version":3,"sources":["webpack:///webpack/bootstrap 8c7cee1f8cf1e2df042a","webpack:///(webpack)/buildin/amd-options.js","webpack:///./~/lodash/core.js","webpack:///./src/module.js","webpack:///./src/module2.js","webpack:///./src/module3.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/main.js"],"names":["undefined","VERSION","FUNC_ERROR_TEXT","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_PARTIAL_FLAG","INFINITY","MAX_SAFE_INTEGER","argsTag","arrayTag","asyncTag","boolTag","dateTag","errorTag","funcTag","genTag","numberTag","objectTag","proxyTag","regexpTag","stringTag","reUnescapedHtml","reHasUnescapedHtml","RegExp","source","htmlEscapes","freeGlobal","global","Object","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","arrayPush","array","values","push","apply","baseFindIndex","predicate","fromIndex","fromRight","length","index","baseProperty","key","object","basePropertyOf","baseReduce","collection","iteratee","accumulator","initAccum","eachFunc","value","baseValues","props","baseMap","escapeHtmlChar","overArg","func","transform","arg","arrayProto","Array","prototype","objectProto","hasOwnProperty","idCounter","nativeObjectToString","toString","oldDash","_","objectCreate","create","propertyIsEnumerable","nativeIsFinite","isFinite","nativeKeys","keys","nativeMax","Math","max","lodash","LodashWrapper","baseCreate","proto","isObject","result","chainAll","__wrapped__","__actions__","__chain__","constructor","assignValue","objValue","call","eq","baseAssignValue","baseDelay","wait","args","TypeError","setTimeout","baseEach","createBaseEach","baseForOwn","baseEvery","baseExtremum","comparator","current","computed","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseFunctions","isFunction","baseGetTag","objectToString","baseGt","other","baseIsArguments","noop","baseIsDate","isObjectLike","baseIsEqual","bitmask","customizer","stack","baseIsEqualDeep","equalFunc","objIsArr","isArray","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objStack","find","entry","othStack","equalArrays","equalByTag","pop","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsRegExp","baseIteratee","identity","baseMatches","baseLt","isArrayLike","basePick","reduce","baseRest","start","setToString","overRest","baseSlice","end","copyArray","baseSome","baseWrapperValue","actions","action","thisArg","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","copyObject","isNew","newValue","createAssigner","assigner","sources","iterable","keysFunc","createCtor","Ctor","arguments","thisBinding","createFind","findIndexFunc","createPartial","partials","isBind","wrapper","argsIndex","argsLength","leftIndex","leftLength","fn","customDefaultsAssignIn","srcValue","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","indexOf","tag","name","message","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatRest","flatten","isArguments","nativeKeysIn","otherArgs","compact","Boolean","concat","findIndex","toInteger","flattenDeep","head","isReflexive","last","slice","chain","tap","interceptor","thru","wrapperChain","wrapperValue","every","guard","filter","forEach","map","size","some","sortBy","sort","criteria","before","n","bind","defer","delay","toNumber","negate","once","clone","isLength","isBoolean","isDate","isEmpty","isString","splice","isEqual","type","isNaN","isNumber","isNull","isRegExp","isUndefined","toArray","Number","assign","assignIn","assignInWith","srcIndex","keysIn","properties","defaults","has","path","pick","paths","defaultValue","escape","string","test","replace","matches","mixin","options","methodNames","isFunc","methodName","noConflict","uniqueId","prefix","id","min","extend","each","first","String","chainName","retUnwrapped","toJSON","valueOf","define","sum","a","b","subtract","multiply","divide","modulo","g","eval","e","window","webpackPolyfill","deprecate","children","defineProperty","enumerable","get","l","i","module3","console","log","require","array2","o"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8c7cee1f8cf1e2df042a","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 0\n// module chunks = 0","/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash core -o ./dist/lodash.core.js`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Error message constants. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_PARTIAL_FLAG = 32;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  /** Used to match HTML entities and HTML characters. */\n  var reUnescapedHtml = /[&<>\"']/g,\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    array.push.apply(array, values);\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return baseMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n      objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to generate unique IDs. */\n  var idCounter = 0;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto.toString;\n\n  /** Used to restore the original `_` reference in `_.noConflict`. */\n  var oldDash = root._;\n\n  /** Built-in value references. */\n  var objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsFinite = root.isFinite,\n      nativeKeys = overArg(Object.keys, Object),\n      nativeMax = Math.max;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array and iteratees accept only\n   * one argument. The heuristic for whether a section qualifies for shortcut\n   * fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return value instanceof LodashWrapper\n      ? value\n      : new LodashWrapper(value);\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} proto The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  var baseCreate = (function() {\n    function object() {}\n    return function(proto) {\n      if (!isObject(proto)) {\n        return {};\n      }\n      if (objectCreate) {\n        return objectCreate(proto);\n      }\n      object.prototype = proto;\n      var result = new object;\n      object.prototype = undefined;\n      return result;\n    };\n  }());\n\n  /**\n   * The base constructor for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap.\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\n   */\n  function LodashWrapper(value, chainAll) {\n    this.__wrapped__ = value;\n    this.__actions__ = [];\n    this.__chain__ = !!chainAll;\n  }\n\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\n  LodashWrapper.prototype.constructor = LodashWrapper;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n      baseAssignValue(object, key, value);\n    }\n  }\n\n  /**\n   * The base implementation of `assignValue` and `assignMergeValue` without\n   * value checks.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function baseAssignValue(object, key, value) {\n    object[key] = value;\n  }\n\n  /**\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\n   * to provide to `func`.\n   *\n   * @private\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {Array} args The arguments to provide to `func`.\n   * @returns {number|Object} Returns the timer id or timeout object.\n   */\n  function baseDelay(func, wait, args) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   */\n  var baseEach = createBaseEach(baseForOwn);\n\n  /**\n   * The base implementation of `_.every` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`\n   */\n  function baseEvery(collection, predicate) {\n    var result = true;\n    baseEach(collection, function(value, index, collection) {\n      result = !!predicate(value, index, collection);\n      return result;\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? (current === current && !false)\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.filter` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function baseFilter(collection, predicate) {\n    var result = [];\n    baseEach(collection, function(value, index, collection) {\n      if (predicate(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` with support for restricting flattening.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {number} depth The maximum recursion depth.\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n   * @param {Array} [result=[]] The initial result value.\n   * @returns {Array} Returns the new flattened array.\n   */\n  function baseFlatten(array, depth, predicate, isStrict, result) {\n    var index = -1,\n        length = array.length;\n\n    predicate || (predicate = isFlattenable);\n    result || (result = []);\n\n    while (++index < length) {\n      var value = array[index];\n      if (depth > 0 && predicate(value)) {\n        if (depth > 1) {\n          // Recursively flatten arrays (susceptible to call stack limits).\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor();\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return object && baseFor(object, iteratee, keys);\n  }\n\n  /**\n   * The base implementation of `_.functions` which creates an array of\n   * `object` function property names filtered from `props`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Array} props The property names to filter.\n   * @returns {Array} Returns the function names.\n   */\n  function baseFunctions(object, props) {\n    return baseFilter(props, function(key) {\n      return isFunction(object[key]);\n    });\n  }\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag(value) {\n    return objectToString(value);\n  }\n\n  /**\n   * The base implementation of `_.gt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\n   *  else `false`.\n   */\n  function baseGt(value, other) {\n    return value > other;\n  }\n\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n  var baseIsArguments = noop;\n\n  /**\n   * The base implementation of `_.isDate` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   */\n  function baseIsDate(value) {\n    return isObjectLike(value) && baseGetTag(value) == dateTag;\n  }\n\n  /**\n   * The base implementation of `_.isEqual` which supports partial comparisons\n   * and tracks traversed objects.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @param {boolean} bitmask The bitmask flags.\n   *  1 - Unordered comparison\n   *  2 - Partial comparison\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(value, other, bitmask, customizer, stack) {\n    if (value === other) {\n      return true;\n    }\n    if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n      return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n  }\n\n  /**\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\n   * deep comparisons and tracks traversed objects enabling objects with circular\n   * references to be compared.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n    var objIsArr = isArray(object),\n        othIsArr = isArray(other),\n        objTag = objIsArr ? arrayTag : baseGetTag(object),\n        othTag = othIsArr ? arrayTag : baseGetTag(other);\n\n    objTag = objTag == argsTag ? objectTag : objTag;\n    othTag = othTag == argsTag ? objectTag : othTag;\n\n    var objIsObj = objTag == objectTag,\n        othIsObj = othTag == objectTag,\n        isSameTag = objTag == othTag;\n\n    stack || (stack = []);\n    var objStack = find(stack, function(entry) {\n      return entry[0] == object;\n    });\n    var othStack = find(stack, function(entry) {\n      return entry[0] == other;\n    });\n    if (objStack && othStack) {\n      return objStack[1] == other;\n    }\n    stack.push([object, other]);\n    stack.push([other, object]);\n    if (isSameTag && !objIsObj) {\n      var result = (objIsArr)\n        ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n        : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      stack.pop();\n      return result;\n    }\n    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (objIsWrapped || othIsWrapped) {\n        var objUnwrapped = objIsWrapped ? object.value() : object,\n            othUnwrapped = othIsWrapped ? other.value() : other;\n\n        var result = equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        stack.pop();\n        return result;\n      }\n    }\n    if (!isSameTag) {\n      return false;\n    }\n    var result = equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    stack.pop();\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   */\n  function baseIsRegExp(value) {\n    return isObjectLike(value) && baseGetTag(value) == regexpTag;\n  }\n\n  /**\n   * The base implementation of `_.iteratee`.\n   *\n   * @private\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\n   * @returns {Function} Returns the iteratee.\n   */\n  function baseIteratee(func) {\n    if (typeof func == 'function') {\n      return func;\n    }\n    if (func == null) {\n      return identity;\n    }\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\n  }\n\n  /**\n   * The base implementation of `_.lt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\n   *  else `false`.\n   */\n  function baseLt(value, other) {\n    return value < other;\n  }\n\n  /**\n   * The base implementation of `_.map` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function baseMap(collection, iteratee) {\n    var index = -1,\n        result = isArrayLike(collection) ? Array(collection.length) : [];\n\n    baseEach(collection, function(value, key, collection) {\n      result[++index] = iteratee(value, key, collection);\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.matches` which doesn't clone `source`.\n   *\n   * @private\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   */\n  function baseMatches(source) {\n    var props = nativeKeys(source);\n    return function(object) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length];\n        if (!(key in object &&\n              baseIsEqual(source[key], object[key], COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG)\n            )) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * The base implementation of `_.pick` without support for individual\n   * property identifiers.\n   *\n   * @private\n   * @param {Object} object The source object.\n   * @param {string[]} paths The property paths to pick.\n   * @returns {Object} Returns the new object.\n   */\n  function basePick(object, props) {\n    object = Object(object);\n    return reduce(props, function(result, key) {\n      if (key in object) {\n        result[key] = object[key];\n      }\n      return result;\n    }, {});\n  }\n\n  /**\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   */\n  function baseRest(func, start) {\n    return setToString(overRest(func, start, identity), func + '');\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : (length + start);\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : ((end - start) >>> 0);\n    start >>>= 0;\n\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source) {\n    return baseSlice(source, 0, source.length);\n  }\n\n  /**\n   * The base implementation of `_.some` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function baseSome(collection, predicate) {\n    var result;\n\n    baseEach(collection, function(value, index, collection) {\n      result = predicate(value, index, collection);\n      return !result;\n    });\n    return !!result;\n  }\n\n  /**\n   * The base implementation of `wrapperValue` which returns the result of\n   * performing a sequence of actions on the unwrapped `value`, where each\n   * successive action is supplied the return value of the previous.\n   *\n   * @private\n   * @param {*} value The unwrapped value.\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\n   * @returns {*} Returns the resolved value.\n   */\n  function baseWrapperValue(value, actions) {\n    var result = value;\n    return reduce(actions, function(result, action) {\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\n    }, result);\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsDefined = value !== undefined,\n          valIsNull = value === null,\n          valIsReflexive = value === value,\n          valIsSymbol = false;\n\n      var othIsDefined = other !== undefined,\n          othIsNull = other === null,\n          othIsReflexive = other === other,\n          othIsSymbol = false;\n\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n          (valIsNull && othIsDefined && othIsReflexive) ||\n          (!valIsDefined && othIsReflexive) ||\n          !valIsReflexive) {\n        return 1;\n      }\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n          (othIsNull && valIsDefined && valIsReflexive) ||\n          (!othIsDefined && valIsReflexive) ||\n          !othIsReflexive) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObject(source, props, object, customizer) {\n    var isNew = !object;\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = source[key];\n      }\n      if (isNew) {\n        baseAssignValue(object, key, newValue);\n      } else {\n        assignValue(object, key, newValue);\n      }\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return baseRest(function(object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined;\n\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\n        ? (length--, customizer)\n        : undefined;\n\n      object = Object(object);\n      while (++index < length) {\n        var source = sources[index];\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n      return object;\n    });\n  }\n\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function(collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!isArrayLike(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n          index = fromRight ? length : -1,\n          iterable = Object(collection);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor(fromRight) {\n    return function(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    };\n  }\n\n  /**\n   * Creates a function that produces an instance of `Ctor` regardless of\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n   *\n   * @private\n   * @param {Function} Ctor The constructor to wrap.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createCtor(Ctor) {\n    return function() {\n      // Use a `switch` statement to work with class constructors. See\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n      // for more details.\n      var args = arguments;\n      var thisBinding = baseCreate(Ctor.prototype),\n          result = Ctor.apply(thisBinding, args);\n\n      // Mimic the constructor's `return` behavior.\n      // See https://es5.github.io/#x13.2.2 for more details.\n      return isObject(result) ? result : thisBinding;\n    };\n  }\n\n  /**\n   * Creates a `_.find` or `_.findLast` function.\n   *\n   * @private\n   * @param {Function} findIndexFunc The function to find the collection index.\n   * @returns {Function} Returns the new find function.\n   */\n  function createFind(findIndexFunc) {\n    return function(collection, predicate, fromIndex) {\n      var iterable = Object(collection);\n      if (!isArrayLike(collection)) {\n        var iteratee = baseIteratee(predicate, 3);\n        collection = keys(collection);\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n      }\n      var index = findIndexFunc(collection, predicate, fromIndex);\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke it with the `this` binding\n   * of `thisArg` and `partials` prepended to the arguments it receives.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} partials The arguments to prepend to those provided to\n   *  the new function.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createPartial(func, bitmask, thisArg, partials) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var isBind = bitmask & WRAP_BIND_FLAG,\n        Ctor = createCtor(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n      return fn.apply(isBind ? thisArg : this, args);\n    }\n    return wrapper;\n  }\n\n  /**\n   * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n   * of source objects to the destination object for all destination properties\n   * that resolve to `undefined`.\n   *\n   * @private\n   * @param {*} objValue The destination value.\n   * @param {*} srcValue The source value.\n   * @param {string} key The key of the property to assign.\n   * @param {Object} object The parent object of `objValue`.\n   * @returns {*} Returns the value to assign.\n   */\n  function customDefaultsAssignIn(objValue, srcValue, key, object) {\n    if (objValue === undefined ||\n        (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n      return srcValue;\n    }\n    return objValue;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Array} array The array to compare.\n   * @param {Array} other The other array to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n   */\n  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        arrLength = array.length,\n        othLength = other.length;\n\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n      return false;\n    }\n    var index = -1,\n        result = true,\n        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? [] : undefined;\n\n    // Ignore non-index properties.\n    while (++index < arrLength) {\n      var arrValue = array[index],\n          othValue = other[index];\n\n      var compared;\n      if (compared !== undefined) {\n        if (compared) {\n          continue;\n        }\n        result = false;\n        break;\n      }\n      // Recursively compare arrays (susceptible to call stack limits).\n      if (seen) {\n        if (!baseSome(other, function(othValue, othIndex) {\n              if (!indexOf(seen, othIndex) &&\n                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                return seen.push(othIndex);\n              }\n            })) {\n          result = false;\n          break;\n        }\n      } else if (!(\n            arrValue === othValue ||\n              equalFunc(arrValue, othValue, bitmask, customizer, stack)\n          )) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\n   * the same `toStringTag`.\n   *\n   * **Note:** This function only supports comparing values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {string} tag The `toStringTag` of the objects to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n    switch (tag) {\n\n      case boolTag:\n      case dateTag:\n      case numberTag:\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\n        // Invalid dates are coerced to `NaN`.\n        return eq(+object, +other);\n\n      case errorTag:\n        return object.name == other.name && object.message == other.message;\n\n      case regexpTag:\n      case stringTag:\n        // Coerce regexes to strings and treat strings, primitives and objects,\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n        // for more details.\n        return object == (other + '');\n\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for objects with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        objProps = keys(object),\n        objLength = objProps.length,\n        othProps = keys(other),\n        othLength = othProps.length;\n\n    if (objLength != othLength && !isPartial) {\n      return false;\n    }\n    var index = objLength;\n    while (index--) {\n      var key = objProps[index];\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n        return false;\n      }\n    }\n    var result = true;\n\n    var skipCtor = isPartial;\n    while (++index < objLength) {\n      key = objProps[index];\n      var objValue = object[key],\n          othValue = other[key];\n\n      var compared;\n      // Recursively compare objects (susceptible to call stack limits).\n      if (!(compared === undefined\n            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n            : compared\n          )) {\n        result = false;\n        break;\n      }\n      skipCtor || (skipCtor = key == 'constructor');\n    }\n    if (result && !skipCtor) {\n      var objCtor = object.constructor,\n          othCtor = other.constructor;\n\n      // Non `Object` object instances with different constructors are not equal.\n      if (objCtor != othCtor &&\n          ('constructor' in object && 'constructor' in other) &&\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseRest` which flattens the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @returns {Function} Returns the new function.\n   */\n  function flatRest(func) {\n    return setToString(overRest(func, undefined, flatten), func + '');\n  }\n\n  /**\n   * Checks if `value` is a flattenable `arguments` object or array.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n   */\n  function isFlattenable(value) {\n    return isArray(value) || isArguments(value);\n  }\n\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function nativeKeysIn(object) {\n    var result = [];\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString(value) {\n    return nativeObjectToString.call(value);\n  }\n\n  /**\n   * A specialized version of `baseRest` which transforms the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @param {Function} transform The rest array transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overRest(func, start, transform) {\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n    return function() {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n      index = -1;\n      var otherArgs = Array(start + 1);\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n      otherArgs[start] = transform(array);\n      return func.apply(this, otherArgs);\n    };\n  }\n\n  /**\n   * Sets the `toString` method of `func` to return `string`.\n   *\n   * @private\n   * @param {Function} func The function to modify.\n   * @param {Function} string The `toString` result.\n   * @returns {Function} Returns `func`.\n   */\n  var setToString = identity;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns the new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    return baseFilter(array, Boolean);\n  }\n\n  /**\n   * Creates a new array concatenating `array` with any additional arrays\n   * and/or values.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to concatenate.\n   * @param {...*} [values] The values to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   * @example\n   *\n   * var array = [1];\n   * var other = _.concat(array, 2, [3], [[4]]);\n   *\n   * console.log(other);\n   * // => [1, 2, 3, [4]]\n   *\n   * console.log(array);\n   * // => [1]\n   */\n  function concat() {\n    var length = arguments.length;\n    if (!length) {\n      return [];\n    }\n    var args = Array(length - 1),\n        array = arguments[0],\n        index = length;\n\n    while (index--) {\n      args[index - 1] = arguments[index];\n    }\n    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n  }\n\n  /**\n   * This method is like `_.find` except that it returns the index of the first\n   * element `predicate` returns truthy for instead of the element itself.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the found element, else `-1`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'active': false },\n   *   { 'user': 'fred',    'active': false },\n   *   { 'user': 'pebbles', 'active': true }\n   * ];\n   *\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\n   * // => 0\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\n   * // => 1\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.findIndex(users, ['active', false]);\n   * // => 0\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.findIndex(users, 'active');\n   * // => 2\n   */\n  function findIndex(array, predicate, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (!length) {\n      return -1;\n    }\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\n    if (index < 0) {\n      index = nativeMax(length + index, 0);\n    }\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\n  }\n\n  /**\n   * Flattens `array` a single level deep.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, [3, [4]], 5]\n   */\n  function flatten(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, 1) : [];\n  }\n\n  /**\n   * Recursively flattens `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, 3, 4, 5]\n   */\n  function flattenDeep(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, INFINITY) : [];\n  }\n\n  /**\n   * Gets the first element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias first\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the first element of `array`.\n   * @example\n   *\n   * _.head([1, 2, 3]);\n   * // => 1\n   *\n   * _.head([]);\n   * // => undefined\n   */\n  function head(array) {\n    return (array && array.length) ? array[0] : undefined;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found in `array`\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\n   * offset from the end of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 1, 2], 2);\n   * // => 1\n   *\n   * // Search from the `fromIndex`.\n   * _.indexOf([1, 2, 1, 2], 2, 2);\n   * // => 3\n   */\n  function indexOf(array, value, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (typeof fromIndex == 'number') {\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n    } else {\n      fromIndex = 0;\n    }\n    var index = (fromIndex || 0) - 1,\n        isReflexive = value === value;\n\n    while (++index < length) {\n      var other = array[index];\n      if ((isReflexive ? other === value : other !== other)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the last element of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   */\n  function last(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? array[length - 1] : undefined;\n  }\n\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function slice(array, start, end) {\n    var length = array == null ? 0 : array.length;\n    start = start == null ? 0 : +start;\n    end = end === undefined ? length : +end;\n    return length ? baseSlice(array, start, end) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n   * chain sequences enabled. The result of such sequences must be unwrapped\n   * with `_#value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.3.0\n   * @category Seq\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36 },\n   *   { 'user': 'fred',    'age': 40 },\n   *   { 'user': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _\n   *   .chain(users)\n   *   .sortBy('age')\n   *   .map(function(o) {\n   *     return o.user + ' is ' + o.age;\n   *   })\n   *   .head()\n   *   .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    var result = lodash(value);\n    result.__chain__ = true;\n    return result;\n  }\n\n  /**\n   * This method invokes `interceptor` and returns `value`. The interceptor\n   * is invoked with one argument; (value). The purpose of this method is to\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3])\n   *  .tap(function(array) {\n   *    // Mutate input array.\n   *    array.pop();\n   *  })\n   *  .reverse()\n   *  .value();\n   * // => [2, 1]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\n   * results in a method chain sequence.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns the result of `interceptor`.\n   * @example\n   *\n   * _('  abc  ')\n   *  .chain()\n   *  .trim()\n   *  .thru(function(value) {\n   *    return [value];\n   *  })\n   *  .value();\n   * // => ['abc']\n   */\n  function thru(value, interceptor) {\n    return interceptor(value);\n  }\n\n  /**\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n   *\n   * @name chain\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 }\n   * ];\n   *\n   * // A sequence without explicit chaining.\n   * _(users).head();\n   * // => { 'user': 'barney', 'age': 36 }\n   *\n   * // A sequence with explicit chaining.\n   * _(users)\n   *   .chain()\n   *   .head()\n   *   .pick('user')\n   *   .value();\n   * // => { 'user': 'barney' }\n   */\n  function wrapperChain() {\n    return chain(this);\n  }\n\n  /**\n   * Executes the chain sequence to resolve the unwrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @since 0.1.0\n   * @alias toJSON, valueOf\n   * @category Seq\n   * @returns {*} Returns the resolved unwrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * **Note:** This method returns `true` for\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n   * elements of empty collections.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': false },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.every(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.every(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.every(users, 'active');\n   * // => false\n   */\n  function every(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseEvery(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning an array of all elements\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * **Note:** Unlike `_.remove`, this method returns a new array.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   * @see _.reject\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, function(o) { return !o.active; });\n   * // => objects for ['fred']\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, { 'age': 36, 'active': true });\n   * // => objects for ['barney']\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, ['active', false]);\n   * // => objects for ['fred']\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.filter(users, 'active');\n   * // => objects for ['barney']\n   */\n  function filter(collection, predicate) {\n    return baseFilter(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning the first element\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {*} Returns the matched element, else `undefined`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36, 'active': true },\n   *   { 'user': 'fred',    'age': 40, 'active': false },\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\n   * ];\n   *\n   * _.find(users, function(o) { return o.age < 40; });\n   * // => object for 'barney'\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.find(users, { 'age': 1, 'active': true });\n   * // => object for 'pebbles'\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.find(users, ['active', false]);\n   * // => object for 'fred'\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\n   * or `_.forOwn` for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias each\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   * @see _.forEachRight\n   * @example\n   *\n   * _.forEach([1, 2], function(value) {\n   *   console.log(value);\n   * });\n   * // => Logs `1` then `2`.\n   *\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n   */\n  function forEach(collection, iteratee) {\n    return baseEach(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Creates an array of values by running each element in `collection` thru\n   * `iteratee`. The iteratee is invoked with three arguments:\n   * (value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n   *\n   * The guarded methods are:\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * _.map([4, 8], square);\n   * // => [16, 64]\n   *\n   * _.map({ 'a': 4, 'b': 8 }, square);\n   * // => [16, 64] (iteration order is not guaranteed)\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, 'user');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, iteratee) {\n    return baseMap(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Reduces `collection` to a value which is the accumulated result of running\n   * each element in `collection` thru `iteratee`, where each successive\n   * invocation is supplied the return value of the previous. If `accumulator`\n   * is not given, the first element of `collection` is used as the initial\n   * value. The iteratee is invoked with four arguments:\n   * (accumulator, value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\n   *\n   * The guarded methods are:\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n   * and `sortBy`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @returns {*} Returns the accumulated value.\n   * @see _.reduceRight\n   * @example\n   *\n   * _.reduce([1, 2], function(sum, n) {\n   *   return sum + n;\n   * }, 0);\n   * // => 3\n   *\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n   *   (result[value] || (result[value] = [])).push(key);\n   *   return result;\n   * }, {});\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n   */\n  function reduce(collection, iteratee, accumulator) {\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\n  }\n\n  /**\n   * Gets the size of `collection` by returning its length for array-like\n   * values or the number of own enumerable string keyed properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns the collection size.\n   * @example\n   *\n   * _.size([1, 2, 3]);\n   * // => 3\n   *\n   * _.size({ 'a': 1, 'b': 2 });\n   * // => 2\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    if (collection == null) {\n      return 0;\n    }\n    collection = isArrayLike(collection) ? collection : nativeKeys(collection);\n    return collection.length;\n  }\n\n  /**\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var users = [\n   *   { 'user': 'barney', 'active': true },\n   *   { 'user': 'fred',   'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.some(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.some(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.some(users, 'active');\n   * // => true\n   */\n  function some(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseSome(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection thru each iteratee. This method\n   * performs a stable sort, that is, it preserves the original sort order of\n   * equal elements. The iteratees are invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\n   *  The iteratees to sort by.\n   * @returns {Array} Returns the new sorted array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'fred',   'age': 48 },\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 },\n   *   { 'user': 'barney', 'age': 34 }\n   * ];\n   *\n   * _.sortBy(users, [function(o) { return o.user; }]);\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   *\n   * _.sortBy(users, ['user', 'age']);\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n   */\n  function sortBy(collection, iteratee) {\n    var index = 0;\n    iteratee = baseIteratee(iteratee);\n\n    return baseMap(baseMap(collection, function(value, key, collection) {\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\n    }).sort(function(object, other) {\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\n    }), baseProperty('value'));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that invokes `func`, with the `this` binding and arguments\n   * of the created function, while it's called less than `n` times. Subsequent\n   * calls to the created function return the result of the last `func` invocation.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {number} n The number of calls at which `func` is no longer invoked.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * jQuery(element).on('click', _.before(5, addContactToList));\n   * // => Allows adding up to 4 contacts to the list.\n   */\n  function before(n, func) {\n    var result;\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    n = toInteger(n);\n    return function() {\n      if (--n > 0) {\n        result = func.apply(this, arguments);\n      }\n      if (n <= 1) {\n        func = undefined;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\n   * and `partials` prepended to the arguments it receives.\n   *\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n   * may be used as a placeholder for partially applied arguments.\n   *\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n   * property of bound functions.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} [partials] The arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * function greet(greeting, punctuation) {\n   *   return greeting + ' ' + this.user + punctuation;\n   * }\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * var bound = _.bind(greet, object, 'hi');\n   * bound('!');\n   * // => 'hi fred!'\n   *\n   * // Bound with placeholders.\n   * var bound = _.bind(greet, object, _, '!');\n   * bound('hi');\n   * // => 'hi fred!'\n   */\n  var bind = baseRest(function(func, thisArg, partials) {\n    return createPartial(func, WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG, thisArg, partials);\n  });\n\n  /**\n   * Defers invoking the `func` until the current call stack has cleared. Any\n   * additional arguments are provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to defer.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function(text) {\n   *   console.log(text);\n   * }, 'deferred');\n   * // => Logs 'deferred' after one millisecond.\n   */\n  var defer = baseRest(function(func, args) {\n    return baseDelay(func, 1, args);\n  });\n\n  /**\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\n   * provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.delay(function(text) {\n   *   console.log(text);\n   * }, 1000, 'later');\n   * // => Logs 'later' after one second.\n   */\n  var delay = baseRest(function(func, wait, args) {\n    return baseDelay(func, toNumber(wait) || 0, args);\n  });\n\n  /**\n   * Creates a function that negates the result of the predicate `func`. The\n   * `func` predicate is invoked with the `this` binding and arguments of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {Function} predicate The predicate to negate.\n   * @returns {Function} Returns the new negated function.\n   * @example\n   *\n   * function isEven(n) {\n   *   return n % 2 == 0;\n   * }\n   *\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n   * // => [1, 3, 5]\n   */\n  function negate(predicate) {\n    if (typeof predicate != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return function() {\n      var args = arguments;\n      return !predicate.apply(this, args);\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\n   * to the function return the value of the first invocation. The `func` is\n   * invoked with the `this` binding and arguments of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // => `createApplication` is invoked once\n   */\n  function once(func) {\n    return before(2, func);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @see _.cloneDeep\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    if (!isObject(value)) {\n      return value;\n    }\n    return isArray(value) ? copyArray(value) : copyObject(value, nativeKeys(value));\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n      !propertyIsEnumerable.call(value, 'callee');\n  };\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a boolean primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n   * @example\n   *\n   * _.isBoolean(false);\n   * // => true\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false ||\n      (isObjectLike(value) && baseGetTag(value) == boolTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Date` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   *\n   * _.isDate('Mon April 23 2012');\n   * // => false\n   */\n  var isDate = baseIsDate;\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (isArrayLike(value) &&\n        (isArray(value) || isString(value) ||\n          isFunction(value.splice) || isArguments(value))) {\n      return !value.length;\n    }\n    return !nativeKeys(value).length;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are compared by strict equality, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n\n  /**\n   * Checks if `value` is a finite primitive number.\n   *\n   * **Note:** This method is based on\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n   * @example\n   *\n   * _.isFinite(3);\n   * // => true\n   *\n   * _.isFinite(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   *\n   * _.isFinite('3');\n   * // => false\n   */\n  function isFinite(value) {\n    return typeof value == 'number' && nativeIsFinite(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n    var tag = baseGetTag(value);\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' &&\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * **Note:** This method is based on\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n   * `undefined` and other non-number values.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // An `NaN` primitive is the only value that is not equal to itself.\n    // Perform the `toStringTag` check first to avoid errors with some\n    // ActiveX objects in IE.\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(void 0);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' ||\n      (isObjectLike(value) && baseGetTag(value) == numberTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `RegExp` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   * @example\n   *\n   * _.isRegExp(/abc/);\n   * // => true\n   *\n   * _.isRegExp('/abc/');\n   * // => false\n   */\n  var isRegExp = baseIsRegExp;\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('abc');\n   * // => true\n   *\n   * _.isString(1);\n   * // => false\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   *\n   * _.isUndefined(null);\n   * // => false\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Converts `value` to an array.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Array} Returns the converted array.\n   * @example\n   *\n   * _.toArray({ 'a': 1, 'b': 2 });\n   * // => [1, 2]\n   *\n   * _.toArray('abc');\n   * // => ['a', 'b', 'c']\n   *\n   * _.toArray(1);\n   * // => []\n   *\n   * _.toArray(null);\n   * // => []\n   */\n  function toArray(value) {\n    if (!isArrayLike(value)) {\n      return values(value);\n    }\n    return value.length ? copyArray(value) : [];\n  }\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  var toInteger = Number;\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n  var toNumber = Number;\n\n  /**\n   * Converts `value` to a string. An empty string is returned for `null`\n   * and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable string keyed properties of source objects to the\n   * destination object. Source objects are applied from left to right.\n   * Subsequent sources overwrite property assignments of previous sources.\n   *\n   * **Note:** This method mutates `object` and is loosely based on\n   * [`Object.assign`](https://mdn.io/Object/assign).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.10.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assignIn\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assign({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var assign = createAssigner(function(object, source) {\n    copyObject(source, nativeKeys(source), object);\n  });\n\n  /**\n   * This method is like `_.assign` except that it iterates over own and\n   * inherited source properties.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extend\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assign\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n   */\n  var assignIn = createAssigner(function(object, source) {\n    copyObject(source, nativeKeysIn(source), object);\n  });\n\n  /**\n   * This method is like `_.assignIn` except that it accepts `customizer`\n   * which is invoked to produce the assigned values. If `customizer` returns\n   * `undefined`, assignment is handled by the method instead. The `customizer`\n   * is invoked with five arguments: (objValue, srcValue, key, object, source).\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extendWith\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} sources The source objects.\n   * @param {Function} [customizer] The function to customize assigned values.\n   * @returns {Object} Returns `object`.\n   * @see _.assignWith\n   * @example\n   *\n   * function customizer(objValue, srcValue) {\n   *   return _.isUndefined(objValue) ? srcValue : objValue;\n   * }\n   *\n   * var defaults = _.partialRight(_.assignInWith, customizer);\n   *\n   * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n    copyObject(source, keysIn(source), object, customizer);\n  });\n\n  /**\n   * Creates an object that inherits from the `prototype` object. If a\n   * `properties` object is given, its own enumerable string keyed properties\n   * are assigned to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Object\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, {\n   *   'constructor': Circle\n   * });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties == null ? result : assign(result, properties);\n  }\n\n  /**\n   * Assigns own and inherited enumerable string keyed properties of source\n   * objects to the destination object for all destination properties that\n   * resolve to `undefined`. Source objects are applied from left to right.\n   * Once a property is set, additional values of the same property are ignored.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.defaultsDeep\n   * @example\n   *\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var defaults = baseRest(function(args) {\n    args.push(undefined, customDefaultsAssignIn);\n    return assignInWith.apply(undefined, args);\n  });\n\n  /**\n   * Checks if `path` is a direct property of `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   * @example\n   *\n   * var object = { 'a': { 'b': 2 } };\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n   *\n   * _.has(object, 'a');\n   * // => true\n   *\n   * _.has(object, 'a.b');\n   * // => true\n   *\n   * _.has(object, ['a', 'b']);\n   * // => true\n   *\n   * _.has(other, 'a');\n   * // => false\n   */\n  function has(object, path) {\n    return object != null && hasOwnProperty.call(object, path);\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  var keys = nativeKeys;\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  var keysIn = nativeKeysIn;\n\n  /**\n   * Creates an object composed of the picked `object` properties.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The source object.\n   * @param {...(string|string[])} [paths] The property paths to pick.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\n   *\n   * _.pick(object, ['a', 'c']);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var pick = flatRest(function(object, paths) {\n    return object == null ? {} : basePick(object, paths);\n  });\n\n  /**\n   * This method is like `_.get` except that if the resolved value is a\n   * function it's invoked with the `this` binding of its parent object and\n   * its result is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path of the property to resolve.\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n   *\n   * _.result(object, 'a[0].b.c1');\n   * // => 3\n   *\n   * _.result(object, 'a[0].b.c2');\n   * // => 4\n   *\n   * _.result(object, 'a[0].b.c3', 'default');\n   * // => 'default'\n   *\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\n   * // => 'default'\n   */\n  function result(object, path, defaultValue) {\n    var value = object == null ? undefined : object[path];\n    if (value === undefined) {\n      value = defaultValue;\n    }\n    return isFunction(value) ? value.call(object) : value;\n  }\n\n  /**\n   * Creates an array of the own enumerable string keyed property values of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property values.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.values(new Foo);\n   * // => [1, 2] (iteration order is not guaranteed)\n   *\n   * _.values('hi');\n   * // => ['h', 'i']\n   */\n  function values(object) {\n    return object == null ? [] : baseValues(object, keys(object));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n   * corresponding HTML entities.\n   *\n   * **Note:** No other characters are escaped. To escape additional\n   * characters use a third-party library like [_he_](https://mths.be/he).\n   *\n   * Though the \">\" character is escaped for symmetry, characters like\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n   * unless they're part of a tag or unquoted attribute value. See\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n   * (under \"semi-related fun fact\") for more details.\n   *\n   * When working with HTML you should always\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n   * XSS vectors.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('fred, barney, & pebbles');\n   * // => 'fred, barney, &amp; pebbles'\n   */\n  function escape(string) {\n    string = toString(string);\n    return (string && reHasUnescapedHtml.test(string))\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Creates a function that invokes `func` with the arguments of the created\n   * function. If `func` is a property name, the created function returns the\n   * property value for a given element. If `func` is an array or object, the\n   * created function returns `true` for elements that contain the equivalent\n   * source properties, otherwise it returns `false`.\n   *\n   * @static\n   * @since 4.0.0\n   * @memberOf _\n   * @category Util\n   * @param {*} [func=_.identity] The value to convert to a callback.\n   * @returns {Function} Returns the callback.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, _.iteratee(['user', 'fred']));\n   * // => [{ 'user': 'fred', 'age': 40 }]\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, _.iteratee('user'));\n   * // => ['barney', 'fred']\n   *\n   * // Create custom iteratee shorthands.\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n   *     return func.test(string);\n   *   };\n   * });\n   *\n   * _.filter(['abc', 'def'], /ef/);\n   * // => ['def']\n   */\n  var iteratee = baseIteratee;\n\n  /**\n   * Creates a function that performs a partial deep comparison between a given\n   * object and `source`, returning `true` if the given object has equivalent\n   * property values, else `false`.\n   *\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\n   * partially applied.\n   *\n   * Partial comparisons will match empty array and empty object `source`\n   * values against any array or object value, respectively. See `_.isEqual`\n   * for a list of supported value comparisons.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Util\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   * @example\n   *\n   * var objects = [\n   *   { 'a': 1, 'b': 2, 'c': 3 },\n   *   { 'a': 4, 'b': 5, 'c': 6 }\n   * ];\n   *\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n   */\n  function matches(source) {\n    return baseMatches(assign({}, source));\n  }\n\n  /**\n   * Adds all own enumerable string keyed function properties of a source\n   * object to the destination object. If `object` is a function, then methods\n   * are added to its prototype as well.\n   *\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n   * avoid conflicts caused by modifying the original.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {Function|Object} [object=lodash] The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n   * @returns {Function|Object} Returns `object`.\n   * @example\n   *\n   * function vowels(string) {\n   *   return _.filter(string, function(v) {\n   *     return /[aeiou]/i.test(v);\n   *   });\n   * }\n   *\n   * _.mixin({ 'vowels': vowels });\n   * _.vowels('fred');\n   * // => ['e']\n   *\n   * _('fred').vowels().value();\n   * // => ['e']\n   *\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\n   * _('fred').vowels();\n   * // => ['e']\n   */\n  function mixin(object, source, options) {\n    var props = keys(source),\n        methodNames = baseFunctions(source, props);\n\n    if (options == null &&\n        !(isObject(source) && (methodNames.length || !props.length))) {\n      options = source;\n      source = object;\n      object = this;\n      methodNames = baseFunctions(source, keys(source));\n    }\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n        isFunc = isFunction(object);\n\n    baseEach(methodNames, function(methodName) {\n      var func = source[methodName];\n      object[methodName] = func;\n      if (isFunc) {\n        object.prototype[methodName] = function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = copyArray(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }\n    });\n\n    return object;\n  }\n\n  /**\n   * Reverts the `_` variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    if (root._ === this) {\n      root._ = oldDash;\n    }\n    return this;\n  }\n\n  /**\n   * This method returns `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * _.times(2, _.noop);\n   * // => [undefined, undefined]\n   */\n  function noop() {\n    // No operation performed.\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {string} [prefix=''] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return toString(prefix) + id;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * _.max([]);\n   * // => undefined\n   */\n  function max(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseGt)\n      : undefined;\n  }\n\n  /**\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * _.min([]);\n   * // => undefined\n   */\n  function min(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseLt)\n      : undefined;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.assignIn = assignIn;\n  lodash.before = before;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.concat = concat;\n  lodash.create = create;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.flattenDeep = flattenDeep;\n  lodash.iteratee = iteratee;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.matches = matches;\n  lodash.mixin = mixin;\n  lodash.negate = negate;\n  lodash.once = once;\n  lodash.pick = pick;\n  lodash.slice = slice;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.thru = thru;\n  lodash.toArray = toArray;\n  lodash.values = values;\n\n  // Add aliases.\n  lodash.extend = assignIn;\n\n  // Add methods to `lodash.prototype`.\n  mixin(lodash, lodash);\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.forEach = forEach;\n  lodash.has = has;\n  lodash.head = head;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.last = last;\n  lodash.max = max;\n  lodash.min = min;\n  lodash.noConflict = noConflict;\n  lodash.noop = noop;\n  lodash.reduce = reduce;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.uniqueId = uniqueId;\n\n  // Add aliases.\n  lodash.each = forEach;\n  lodash.first = head;\n\n  mixin(lodash, (function() {\n    var source = {};\n    baseForOwn(lodash, function(func, methodName) {\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  }()), { 'chain': false });\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  // Add `Array` methods to `lodash.prototype`.\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\n\n    lodash.prototype[methodName] = function() {\n      var args = arguments;\n      if (retUnwrapped && !this.__chain__) {\n        var value = this.value();\n        return func.apply(isArray(value) ? value : [], args);\n      }\n      return this[chainName](function(value) {\n        return func.apply(isArray(value) ? value : [], args);\n      });\n    };\n  });\n\n  // Add chain sequence methods to the `lodash` wrapper.\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = lodash;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n\n\n\n// WEBPACK FOOTER //\n// ./~/lodash/core.js","// Module features are made available by babel-loaders on Webpack\n// pre-installed in this workshop for convenience, but to note,\n// imports and exports won't work without babel-loader until Javascript\n// and browsers are able to support them.\n\nfunction sum(a, b) {\n    return a + b;\n}\n\nfunction subtract(a, b) {\n    return a - b;\n} \n\nexport { sum, subtract };\n\n\n// WEBPACK FOOTER //\n// ./src/module.js","// Module features are made available by babel-loaders on Webpack\n// pre-installed in this workshop for convenience, but to note,\n// imports and exports won't work without babel-loader until Javascript\n// and browsers are able to support them.\n\nexport function multiply(a, b) {\n    return a * b;\n}\n\nexport function divide(a, b) {\n    return a / b;\n} \n\n\n// WEBPACK FOOTER //\n// ./src/module2.js","export function modulo(a, b) {\n    return a % b;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module3.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/global.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/module.js","// You can import multiple exports from the same module as long as they are declared on the\n// export\n\n// If you're importing a .js file, no need to declare it on the from statement. just the file\n// name will do.\n\nimport { sum, subtract } from './module';\n\nconsole.log(sum(2, 3));\nconsole.log(subtract(7, 5));\n\n// you can also give your imports an alias\n\nimport { multiply as t, divide as d } from './module2';\n\nconsole.log(t(3, 3));\nconsole.log(d(15, 5));\n\n// if you're particularly lazy, you can just use this and it will work as long as it has\n// been exported on the origin file\n\n// import * from '<file-location>';\n\n// but if you use alias on it, you can use the alias as an object substitute and call\n// whichever exported methods you've exported.\n\nimport * as module3 from './module3';\n\nconsole.log(module3.modulo(17, 5));\n\n// Note: as best practice, put all your imports on top of your files. The arrangement here are\n// just for research purposes.\n\n// imports are mainly used on a production setup to import not only custom modules, but third\n// party modules. For this scenario, we'll import lodash\n\nlet _ = require('lodash/core');\n\nlet array = ['a','b','c'];\nlet array2 = ['a','d','e'];\n\nconsole.log(_.find(array, (o) => { return o === 'b' }));\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}